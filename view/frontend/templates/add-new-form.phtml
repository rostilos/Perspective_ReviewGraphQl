<?php
/** @var Perspective\Review\Block\Product\ReviewList $block */
/** @var Magento\Framework\Escaper $escaper */

if (!$block->isEnabled()) {
    return;
}
?>
<div class="block review-add">
    <div class="block-title">
        <strong>
            <?= $escaper->escapeHtml(__('Write Your Own Review')) ?>
        </strong>
    </div>
    <div class="block-content">
        <form action="<?= $escaper->escapeUrl($block->getActionUrl()) ?>"
              class="review-form"
              method="post"
              id="perspective-review-form"
        >
            <?= $block->getBlockHtml('formkey') ?>
            <?= $block->getChildHtml('form_fields_before') ?>

            <fieldset class="fieldset review-fieldset">
                <input type="hidden" name="product_id" id="product_id" value="<?= $block->getProduct()->getId() ?>">
                <div class="field review-field-text required">
                    <label for="review_field"
                           class="label"
                    >
                        <span><?= $escaper->escapeHtml(__('Add new review')) ?></span>
                    </label>
                    <div class="control">
                        <textarea name="detail" id="perspective-review-detail" cols="5" rows="3"
                                  data-validate="{required:true}"></textarea>
                    </div>
                </div>
            </fieldset>
            <div class="actions-toolbar review-form-actions">
                <div class="primary actions-primary">
                    <button type="submit" class="action submit primary">
                        <span><?= $escaper->escapeHtml(__('Submit Review')) ?></span>
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>


<script>
    require(['jquery', 'Magento_Customer/js/customer-data', 'mage/validation'], ($, customerData) => {
        const mutation = `
            mutation postNewReviewMutation(
                $detail: String!,
                $product_id: Int!
            ) {
               postNewReview(
                   input:{
                       detail: $detail
                       product_id: $product_id
                   }
               ){
                   review {
                    detail
                    product_id
                    created_at
                    user_id
                    review_id
                   }
                   message
               }
            }
        `;

        const dataForm = $('#perspective-review-form');

        dataForm.mage('validation', {});

        dataForm.submit((e) => {
            e.preventDefault();
            if (!dataForm.validation('isValid')) {
                return false;
            }
            sendGraphQLRequest();
        })

        function sendGraphQLRequest() {
            $.ajax({
                url: '<?= $block->getBaseUrl() ?>graphql',
                method: 'POST',
                contentType: 'application/json',
                showLoader: true,
                data: JSON.stringify({
                    query: mutation,
                    variables: {
                        detail: $('#perspective-review-detail').val(),
                        product_id: $('#product_id').val()
                    }
                }),
                success: function (response) {
                    const data = response?.data?.postNewReview;
                    if (!data?.review?.review_id) {
                        if (data?.message) {
                            customerData.set('messages', {
                                messages: [{
                                    text: data?.message || 'Something went wrong',
                                    type: 'error'
                                }]
                            })
                        }
                    }else{
                        $('#perspective-review-detail').val('');
                        window.scrollTo({ top: 0, behavior: 'smooth' });
                        customerData.set('messages', {
                            messages: [{
                                text: data?.message,
                                type: 'success'
                            }]
                        })
                    }
                },
                error: function (error) {
                    customerData.set('messages', {
                        messages: [{
                            text: error || 'Something went wrong',
                            type: 'error'
                        }]
                    })
                }
            });
        }
    })
</script>
